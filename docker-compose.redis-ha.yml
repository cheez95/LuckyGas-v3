version: '3.8'

# Redis High Availability Setup with Sentinel
# This configuration provides:
# - Redis master-slave replication
# - Automatic failover with Sentinel
# - Persistence and backup
# - Monitoring integration

services:
  # Redis Master
  redis-master:
    image: redis:7-alpine
    container_name: luckygas-redis-master
    restart: unless-stopped
    command: >
      sh -c 'if [ -n "$${REDIS_PASSWORD}" ]; then
        redis-server /etc/redis/redis.conf --requirepass "$${REDIS_PASSWORD}" --masterauth "$${REDIS_PASSWORD}"
      else
        redis-server /etc/redis/redis.conf
      fi'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
    volumes:
      - redis_master_data:/data
      - ./deployment/redis/master/redis.conf:/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - luckygas-redis-network

  # Redis Slave 1
  redis-slave-1:
    image: redis:7-alpine
    container_name: luckygas-redis-slave-1
    restart: unless-stopped
    command: >
      sh -c 'if [ -n "$${REDIS_PASSWORD}" ]; then
        redis-server /etc/redis/redis.conf --slaveof redis-master 6379 --requirepass "$${REDIS_PASSWORD}" --masterauth "$${REDIS_PASSWORD}"
      else
        redis-server /etc/redis/redis.conf --slaveof redis-master 6379
      fi'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
    volumes:
      - redis_slave1_data:/data
      - ./deployment/redis/slave/redis.conf:/etc/redis/redis.conf:ro
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - luckygas-redis-network

  # Redis Slave 2
  redis-slave-2:
    image: redis:7-alpine
    container_name: luckygas-redis-slave-2
    restart: unless-stopped
    command: >
      sh -c 'if [ -n "$${REDIS_PASSWORD}" ]; then
        redis-server /etc/redis/redis.conf --slaveof redis-master 6379 --requirepass "$${REDIS_PASSWORD}" --masterauth "$${REDIS_PASSWORD}"
      else
        redis-server /etc/redis/redis.conf --slaveof redis-master 6379
      fi'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
    volumes:
      - redis_slave2_data:/data
      - ./deployment/redis/slave/redis.conf:/etc/redis/redis.conf:ro
    depends_on:
      redis-master:
        condition: service_healthy
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - luckygas-redis-network

  # Redis Sentinel 1
  redis-sentinel-1:
    image: redis:7-alpine
    container_name: luckygas-redis-sentinel-1
    restart: unless-stopped
    command: redis-sentinel /etc/redis/sentinel.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
      SENTINEL_QUORUM: 2
      SENTINEL_DOWN_AFTER: 5000
      SENTINEL_PARALLEL_SYNCS: 1
      SENTINEL_FAILOVER_TIMEOUT: 10000
    volumes:
      - redis_sentinel1_data:/data
      - ./deployment/redis/sentinel/sentinel.conf:/etc/redis/sentinel.conf:ro
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
    ports:
      - "26379:26379"
    networks:
      - luckygas-redis-network

  # Redis Sentinel 2
  redis-sentinel-2:
    image: redis:7-alpine
    container_name: luckygas-redis-sentinel-2
    restart: unless-stopped
    command: redis-sentinel /etc/redis/sentinel.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
      SENTINEL_QUORUM: 2
      SENTINEL_DOWN_AFTER: 5000
      SENTINEL_PARALLEL_SYNCS: 1
      SENTINEL_FAILOVER_TIMEOUT: 10000
    volumes:
      - redis_sentinel2_data:/data
      - ./deployment/redis/sentinel/sentinel.conf:/etc/redis/sentinel.conf:ro
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
    ports:
      - "26380:26379"
    networks:
      - luckygas-redis-network

  # Redis Sentinel 3
  redis-sentinel-3:
    image: redis:7-alpine
    container_name: luckygas-redis-sentinel-3
    restart: unless-stopped
    command: redis-sentinel /etc/redis/sentinel.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
      SENTINEL_QUORUM: 2
      SENTINEL_DOWN_AFTER: 5000
      SENTINEL_PARALLEL_SYNCS: 1
      SENTINEL_FAILOVER_TIMEOUT: 10000
    volumes:
      - redis_sentinel3_data:/data
      - ./deployment/redis/sentinel/sentinel.conf:/etc/redis/sentinel.conf:ro
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
    ports:
      - "26381:26379"
    networks:
      - luckygas-redis-network

  # Redis Exporter for Prometheus monitoring
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: luckygas-redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: "redis://redis-master:6379"
      REDIS_PASSWORD: ${REDIS_PASSWORD:?Redis password required}
      REDIS_EXPORTER_CHECK_KEYS: "keys_patterns=luckygas:*"
      REDIS_EXPORTER_CHECK_SINGLE_KEYS: "luckygas:metrics:*"
      REDIS_EXPORTER_SCRIPT: "/scripts/custom_metrics.lua"
    volumes:
      - ./deployment/redis/monitoring/custom_metrics.lua:/scripts/custom_metrics.lua:ro
    depends_on:
      - redis-master
    ports:
      - "9121:9121"
    networks:
      - luckygas-redis-network

  # RedisInsight for debugging (optional, remove in production)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: luckygas-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    networks:
      - luckygas-redis-network
    profiles:
      - debug

networks:
  luckygas-redis-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16

volumes:
  redis_master_data:
    driver: local
  redis_slave1_data:
    driver: local
  redis_slave2_data:
    driver: local
  redis_sentinel1_data:
    driver: local
  redis_sentinel2_data:
    driver: local
  redis_sentinel3_data:
    driver: local
  redis_insight_data:
    driver: local