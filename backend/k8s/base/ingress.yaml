apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: luckygas-ingress
  namespace: luckygas-staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://staging.luckygas.tw"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  tls:
  - hosts:
    - staging.luckygas.tw
    - staging-api.luckygas.tw
    secretName: luckygas-tls
  rules:
  - host: staging.luckygas.tw
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: luckygas-frontend
            port:
              name: http
  - host: staging-api.luckygas.tw
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: luckygas-backend
            port:
              name: http