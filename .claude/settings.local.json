{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "Bash(ruff:*)",
      "Bash(touch:*)",
      "Bash(cat:*)",
      "Bash(ruff check:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(uv pip:*)",
      "Bash(uv run:*)",
      "Bash(uv init:*)",
      "Bash(uv add:*)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run pytest tests/test_main.py -v)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_snapshot",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(npm init playwright@latest:*)",
      "Bash(npx playwright:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(rm:*)",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_network_requests",
      "Bash(curl:*)",
      "Bash(chmod:*)",
      "Bash(git config:*)",
      "Bash(chmod:*)",
      "mcp__playwright__browser_navigate_forward",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_navigate_back",
      "Bash(export:*)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run pytest tests/integration/test_database_transactions.py::test_transaction_rollback_on_error -v)",
      "Bash(PYTHONPATH=. uv run pytest tests/integration/test_database_transactions.py::test_transaction_rollback_on_error -v)",
      "Bash(PYTHONPATH=. uv run python -c \"from app.core.test_config import test_settings; print(''Test config loaded successfully'')\")",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python -c \"from app.core.test_config import test_settings; print(''Test config loaded successfully'')\")",
      "Bash(PYTHONPATH=. uv run pytest tests/unit/test_security.py::test_password_hashing -v)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run pytest tests/unit/test_sms_gateway.py -v)",
      "Bash(npm test:*)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python migrations/data_migration/001_migrate_clients.py --file \"raw/2025-05 commercial client list.xlsx\")",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python backend/migrations/data_migration/001_migrate_clients.py)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python -c \"from backend.migrations.data_migration.test_migration_validation import MigrationValidator; print(''âœ… Validation script imports successfully'')\")",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python backend/migrations/data_migration/test_migration_validation.py)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python backend/migrations/data_migration/002_fix_column_mapping.py)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python backend/migrations/data_migration/analyze_delivery_data.py)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python 003_migrate_deliveries.py)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python backend/migrations/data_migration/003_migrate_deliveries.py)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python backend/migrations/data_migration/003_migrate_deliveries_fixed.py)",
      "Bash(PYTHONPATH=. uv run python migrations/data_migration/003_migrate_deliveries_fixed.py)",
      "Bash(PYTHONPATH=backend uv run python backend/migrations/data_migration/003_migrate_deliveries_fixed.py --file \"raw/2025-05 commercial deliver history.xlsx\")",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run pytest tests/test_vrp_optimizer.py -v)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run pytest tests/integration/test_analytics_flow.py::test_analytics_dashboard_summary_flow -v --no-header)",
      "Bash(PYTHONPATH=/Users/lgee258/Desktop/LuckyGas-v3/backend uv run python tests/integration/test_story_3_3_realtime_adjustment.py)",
      "Bash(./start-test-env.sh:*)",
      "Bash(docker-compose:*)",
      "Bash(set -a)",
      "Bash(set +a)",
      "Bash(DATABASE_URL=postgresql://luckygas_test:test_password_secure_123@localhost:5433/luckygas_test uv run alembic upgrade head)",
      "Bash(DATABASE_URL=postgresql+asyncpg://luckygas_test:test_password_secure_123@localhost:5433/luckygas_test uv run alembic upgrade head)",
      "Bash(env:*)",
      "Bash(docker exec:*)",
      "Bash(./check_mock_services.sh:*)",
      "Bash(./run-integration-tests.sh:*)",
      "Bash(gcloud auth:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(./deployment/scripts/build-staging-images.sh:*)",
      "Bash(./scripts/validate-deployment.sh:*)",
      "Bash(docker build:*)",
      "Bash(./scripts/deploy-staging.sh:*)",
      "Bash(gcloud sql instances create:*)",
      "Bash(--database-version=POSTGRES_15 )",
      "Bash(--tier=db-f1-micro )",
      "Bash(--region=asia-east1 )",
      "Bash(--network=default )",
      "Bash(--no-assign-ip )",
      "Bash(--database-flags=max_connections=100)",
      "Bash(gcloud services enable:*)",
      "Bash(--database-version=POSTGRES_15 )",
      "Bash(--tier=db-f1-micro )",
      "Bash(--region=asia-east1 )",
      "Bash(--availability-type=zonal )",
      "Bash(--storage-size=10GB )",
      "Bash(--storage-type=HDD)",
      "Bash(gcloud sql operations describe:*)",
      "Bash(gcloud sql instances list:*)",
      "Bash(gcloud sql operations wait:*)",
      "Bash(gcloud sql databases create:*)",
      "Bash(gcloud sql users create:*)",
      "Bash(gcloud sql instances describe:*)",
      "Bash(gcloud run services describe:*)",
      "Bash(gcloud logging read:*)",
      "Bash(gcloud builds submit:*)",
      "Bash(gcloud builds list:*)",
      "Bash(gcloud run deploy:*)",
      "Bash(--image=asia-east1-docker.pkg.dev/vast-tributary-466619-m8/cloud-run-source-deploy/luckygas-backend-staging:latest )",
      "Bash(--region=asia-east1)",
      "Bash(gsutil mb:*)",
      "Bash(gsutil -m cp -r dist/* gs://luckygas-frontend-staging-2025/)",
      "Bash(gsutil -m cp -r frontend/dist/* gs://luckygas-frontend-staging-2025/)",
      "Bash(gsutil cp:*)",
      "Bash(gsutil web set:*)",
      "Bash(gsutil iam:*)",
      "Bash(gcloud run services update:*)",
      "Bash(--update-env-vars=\"FIRST_SUPERUSER=admin@luckygas.com\")",
      "Bash(DATABASE_URL=\"postgresql+asyncpg://luckygas:staging-password-2025@35.194.143.37/luckygas\" ENVIRONMENT=staging SECRET_KEY=staging-secret-key-2025-very-long-32chars FIRST_SUPERUSER=admin@luckygas.com FIRST_SUPERUSER_PASSWORD=admin-password-2025 timeout 10 uv run uvicorn app.main:app --host 0.0.0.0 --port 8000)",
      "Bash(brew install:*)",
      "Bash(ngrok:*)",
      "Bash(timeout:*)",
      "Bash(cp:*)",
      "Bash(kill:*)",
      "Bash(gcloud sql instances add-authorized-networks:*)",
      "Bash(gcloud sql instances patch:*)",
      "Bash(NODE_ENV=production npx vite build --mode production)",
      "Bash(NODE_ENV=production npm run build)",
      "Bash(VITE_API_URL=https://whole-jokes-argue.loca.lt VITE_WS_URL=wss://whole-jokes-argue.loca.lt VITE_ENV=production npm run build)",
      "Bash(gsutil:*)",
      "Bash(alembic upgrade:*)",
      "Bash(DATABASE_URL=postgresql://luckygas:staging-password-2025@35.194.143.37/luckygas uv run alembic upgrade head)",
      "Bash(VITE_API_URL=https://fuzzy-onions-bathe.loca.lt VITE_WS_URL=wss://fuzzy-onions-bathe.loca.lt VITE_ENV=production npm run build)",
      "Bash(DATABASE_URL=postgresql+asyncpg://luckygas_test:test_password_secure_123@localhost:5433/luckygas_test uv run python init_test_db.py)",
      "Bash(./stop-test-env.sh:*)",
      "Bash(./deploy_integrated_backend.sh:*)",
      "Bash(npm run playwright test:*)",
      "Bash(npm run test:e2e:debug:*)",
      "Bash(npm run test:e2e:*)"
    ],
    "deny": []
  }
}