# Cloud Build configuration for direct deployment
# Builds and deploys without local Docker

substitutions:
  _REGION: asia-east1
  _SERVICE_NAME: luckygas-backend
  _PROJECT_ID: vast-tributary-466619-m8

steps:
  # Step 1: Build Docker image using Cloud Build
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args:
      - 'build'
      - '-f'
      - 'backend/Dockerfile.production'
      - '-t'
      - 'asia-east1-docker.pkg.dev/${_PROJECT_ID}/luckygas/${_SERVICE_NAME}:latest'
      - '-t'
      - 'asia-east1-docker.pkg.dev/${_PROJECT_ID}/luckygas/${_SERVICE_NAME}:${SHORT_SHA}'
      - 'backend'

  # Step 2: Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args:
      - 'push'
      - '--all-tags'
      - 'asia-east1-docker.pkg.dev/${_PROJECT_ID}/luckygas/${_SERVICE_NAME}'

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get secrets
        JWT_SECRET=$(gcloud secrets versions access latest --secret=jwt-secret-key)
        SUPERUSER_PASSWORD=$(gcloud secrets versions access latest --secret=first-superuser-password)
        
        # Deploy service
        gcloud run deploy ${_SERVICE_NAME} \
          --image asia-east1-docker.pkg.dev/${_PROJECT_ID}/luckygas/${_SERVICE_NAME}:latest \
          --platform managed \
          --region ${_REGION} \
          --memory 2Gi \
          --cpu 2 \
          --min-instances 1 \
          --max-instances 10 \
          --concurrency 100 \
          --timeout 300 \
          --port 8080 \
          --allow-unauthenticated \
          --set-env-vars="ENVIRONMENT=production" \
          --set-env-vars="PROJECT_ID=${_PROJECT_ID}" \
          --set-env-vars="DATABASE_URL=postgresql+asyncpg://postgres:password@/luckygas?host=/cloudsql/${_PROJECT_ID}:${_REGION}:luckygas-staging" \
          --set-env-vars="SECRET_KEY=${JWT_SECRET}" \
          --set-env-vars="FIRST_SUPERUSER=admin@luckygas.com.tw" \
          --set-env-vars="FIRST_SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}" \
          --set-env-vars="REDIS_URL=redis://localhost:6379" \
          --add-cloudsql-instances=${_PROJECT_ID}:${_REGION}:luckygas-staging \
          --service-account=luckygas-backend@${_PROJECT_ID}.iam.gserviceaccount.com \
          --project=${_PROJECT_ID}

  # Step 4: Verify deployment
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'verify'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe ${_SERVICE_NAME} \
          --region ${_REGION} \
          --format 'value(status.url)')
        
        echo "Service deployed at: ${SERVICE_URL}"
        
        # Test health endpoint
        curl -f ${SERVICE_URL}/api/v1/health || echo "Health check pending..."
        
        echo "Deployment completed successfully!"

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
timeout: '20m'