<testsuites id="" name="" tests="765" failures="0" skipped="765" errors="0" time="0.05265800000000002">
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="firefox" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="webkit" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="edge" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-chrome" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="mobile-safari" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="tablet" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="performance" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-auth-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="API authentication works correctly" classname="api-auth-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth-interceptor-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Auth Interceptor Verification › Office Staff - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Manager - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Driver - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Customer - should authenticate with interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Auth Interceptor Verification › Direct API test with auth interceptor" classname="auth-interceptor-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="26" failures="0" skipped="26" time="0" errors="0">
<testcase name="Authentication Tests › Basic Authentication › should display login page in Traditional Chinese" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should login successfully with valid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should show error with invalid credentials" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should validate email format" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should toggle password visibility" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should support keyboard navigation" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Basic Authentication › should submit form with Enter key" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Super Admin and see all features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Manager and see limited features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Office Staff and see customer/order features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Driver and see only route features" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Role-Based Access Control › should login as Customer and redirect to customer portal" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should persist session with Remember Me" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should logout successfully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should handle token expiration gracefully" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Session Management › should refresh token automatically" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should prevent XSS in login form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should implement rate limiting after failed attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Security Features › should clear sensitive data on logout" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should navigate to forgot password page" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should send password reset email" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Forgot Password Flow › should validate email in forgot password form" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should login within 3 seconds" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Performance Tests › should handle concurrent login attempts" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should have proper ARIA labels and form structure" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Tests › Accessibility Tests › should be navigable with keyboard only" classname="auth.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="check-labels.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="check form labels" classname="check-labels.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="customer-journey.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Customer Journey E2E Tests › Customer Management › should create a new residential customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should create a commercial customer with special requirements" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should validate customer form fields" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should search and filter customers" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should edit customer information" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should view customer order history" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Management › should manage customer inventory" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create a standard order for existing customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create an urgent order with priority" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should create bulk order with multiple products" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Creation Flow › should validate order constraints" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should track order status in real-time" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Order Tracking › should display delivery route on map" classname="customer-journey.spec.ts" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to track their order" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should show order history for customer" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Customer Journey E2E Tests › Customer Portal › should allow customer to request reorder" classname="customer-journey.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="dashboard-api-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Dashboard loads and makes successful API calls" classname="dashboard-api-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="debug-page.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="debug login page" classname="debug-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="driver-workflow.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="20" failures="0" skipped="20" time="0" errors="0">
<testcase name="Driver Workflow Tests › Driver Dashboard › should display driver dashboard optimized for mobile" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should show assigned routes for the day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Driver Dashboard › should display delivery statistics" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should start route and show first delivery" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should show optimized route on map" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should provide turn-by-turn navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Route Navigation › should handle offline navigation" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with signature" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should complete delivery with photo proof" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle delivery issues" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Delivery Completion › should handle customer rejection" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should call customer from app" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should send SMS to customer" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Communication Features › should communicate with office via chat" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should complete route summary" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should submit cylinder return report" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › End of Day Operations › should clock out at end of day" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should work on slow network" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should handle GPS errors gracefully" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Driver Workflow Tests › Performance and Reliability › should sync data when connection restored" classname="driver-workflow.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="simple-login-test.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Login page loads correctly" classname="simple-login-test.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Smoke Tests › should load login page" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests › should connect to backend API" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-cleanup-example.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Test Data Cleanup Example › should create and clean up test customer" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Data Cleanup Example › should handle bulk test data creation and cleanup" classname="test-cleanup-example.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="websocket-realtime.spec.ts" timestamp="2025-07-26T09:25:45.082Z" hostname="visual" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="WebSocket Real-time Updates › should broadcast new order to all connected users" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update delivery status in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should sync route optimization across devices" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle connection loss and reconnection" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should queue messages during offline period" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle high-frequency updates" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should broadcast system notifications" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should update inventory levels in real-time" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="WebSocket Real-time Updates › should handle role-based WebSocket channels" classname="websocket-realtime.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>