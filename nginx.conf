# Nginx configuration for Lucky Gas with performance optimizations

# Enable gzip compression
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/rss+xml
    application/atom+xml
    image/svg+xml
    text/x-js
    text/x-cross-domain-policy
    application/x-font-ttf
    application/x-font-opentype
    application/vnd.ms-fontobject
    image/x-icon
    application/wasm;
gzip_disable "msie6";

# Enable brotli compression (if module is available)
# brotli on;
# brotli_comp_level 6;
# brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

server {
    listen 80;
    server_name luckygas.com.tw www.luckygas.com.tw;
    
    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name luckygas.com.tw www.luckygas.com.tw;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/luckygas.crt;
    ssl_certificate_key /etc/nginx/ssl/luckygas.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Root directory
    root /var/www/luckygas/dist;
    index index.html;
    
    # Service Worker scope
    location /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Service-Worker-Allowed "/";
    }
    
    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable CORS for fonts
        if ($request_filename ~* \.(woff|woff2|ttf|eot)$) {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # Hashed assets (Vite output)
    location ~* \.[a-f0-9]{8}\.(js|css)$ {
        expires max;
        add_header Cache-Control "public, immutable";
    }
    
    # Images with moderate caching
    location ~* \.(webp|avif)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Vary "Accept";
    }
    
    # HTML files - no caching
    location ~* \.(html|htm)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Manifest files
    location ~* \.(json|xml|webmanifest)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }
    
    # API proxy to backend
    location /api {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Disable buffering for SSE/WebSocket
        proxy_buffering off;
        
        # API response caching for GET requests
        location ~* ^/api/v1/(customers|products|routes)$ {
            proxy_pass http://backend:8000;
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # WebSocket support
    location /ws {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 86400;
    }
    
    # SPA fallback - must be last
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers for HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Optimize logging
    access_log /var/log/nginx/luckygas_access.log combined buffer=32k flush=5s;
    error_log /var/log/nginx/luckygas_error.log warn;
    
    # Client body size for file uploads
    client_max_body_size 50M;
    
    # Optimize buffers
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 32 32k;
    postpone_output 1460;
    
    # Optimize file sending
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Keepalive optimization
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Rate limiting (if needed)
    # limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    # location /api {
    #     limit_req zone=api burst=20 nodelay;
    #     ...
    # }
}

# Cache zone for API responses
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

# Upstream backend configuration (if using multiple backend servers)
# upstream backend {
#     least_conn;
#     server backend1:8000 weight=1 max_fails=3 fail_timeout=30s;
#     server backend2:8000 weight=1 max_fails=3 fail_timeout=30s;
#     keepalive 32;
# }