version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: luckygas
      POSTGRES_USER: luckygas
      POSTGRES_PASSWORD: luckygas123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U luckygas"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Adminer - Database Web UI
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      - db

  # Backend API (development mode)
  # Uncomment when ready to run with Docker
  # backend:
  #   build: ./backend
  #   restart: always
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     DATABASE_URL: postgresql://luckygas:luckygas123@db:5432/luckygas
  #     REDIS_URL: redis://redis:6379
  #   volumes:
  #     - ./backend:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (development mode)
  # Uncomment when React app is created
  # frontend:
  #   build: ./frontend
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     REACT_APP_API_URL: http://localhost:8000
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
  redis_data: