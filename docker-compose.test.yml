version: '3.8'

services:
  # PostgreSQL Test Database
  postgres-test:
    image: postgres:14-alpine
    container_name: luckygas-postgres-test
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-luckygas}_test
      POSTGRES_USER: ${POSTGRES_USER:-luckygas}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Database password required}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=zh_TW.UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U luckygas -d luckygas_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - luckygas-test-network

  # Redis Test Cache
  redis-test:
    image: redis:7-alpine
    container_name: luckygas-redis-test
    restart: unless-stopped
    command: >
      sh -c 'if [ -n "$${REDIS_PASSWORD}" ]; then
        redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --requirepass "$${REDIS_PASSWORD}"
      else
        redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
      fi'
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    volumes:
      - redis_test_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - luckygas-test-network

  # Mock SMS Service
  mock-sms:
    image: node:18-alpine
    container_name: luckygas-mock-sms
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./backend/tests/mocks/sms:/app
    command: |
      sh -c "
      if [ ! -f package.json ]; then
        npm init -y &&
        npm install express body-parser
      fi &&
      node server.js
      "
    ports:
      - "8001:8001"
    networks:
      - luckygas-test-network

  # Mock E-Invoice Service
  mock-einvoice:
    image: node:18-alpine
    container_name: luckygas-mock-einvoice
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./backend/tests/mocks/einvoice:/app
    command: |
      sh -c "
      if [ ! -f package.json ]; then
        npm init -y &&
        npm install express body-parser
      fi &&
      node server.js
      "
    ports:
      - "8002:8002"
    networks:
      - luckygas-test-network

  # Mock Banking API
  mock-banking:
    image: node:18-alpine
    container_name: luckygas-mock-banking
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./backend/tests/mocks/banking:/app
    command: |
      sh -c "
      if [ ! -f package.json ]; then
        npm init -y &&
        npm install express body-parser
      fi &&
      node server.js
      "
    ports:
      - "8003:8003"
    networks:
      - luckygas-test-network

networks:
  luckygas-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local