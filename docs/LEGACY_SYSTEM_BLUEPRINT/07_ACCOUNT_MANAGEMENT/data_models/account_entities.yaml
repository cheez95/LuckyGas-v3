# Account Management Data Models - Lucky Gas Legacy System

## Entity Definitions

### 1. CustomerAccount (客戶帳戶)
```yaml
CustomerAccount:
  table_name: "CUSTOMER_ACCOUNT"
  chinese_name: "客戶帳戶主檔"
  description: "Customer account master with financial summary"
  
  fields:
    - name: "ACCOUNT_ID"
      type: "varchar(20)"
      description: "Unique account identifier"
      primary_key: true
      example: "ACC202401001"
      
    - name: "CUSTOMER_ID"
      type: "varchar(20)"
      description: "Link to customer master"
      foreign_key: "CUSTOMER.CUSTOMER_ID"
      required: true
      
    - name: "ACCOUNT_STATUS"
      type: "char(2)"
      description: "Account status"
      values:
        - "01": "Active (正常)"
        - "02": "On Hold (暫停)"
        - "03": "Collection (催收)"
        - "04": "Legal (法務)"
        - "05": "Closed (結束)"
      default: "01"
      
    - name: "CREDIT_LIMIT"
      type: "decimal(12,2)"
      description: "Approved credit limit"
      default: 0
      validation: ">= 0"
      
    - name: "CREDIT_TERMS"
      type: "varchar(10)"
      description: "Payment terms code"
      values:
        - "COD": "Cash on Delivery"
        - "NET30": "Net 30 days"
        - "NET60": "Net 60 days"
        - "2/10N30": "2% 10 days, Net 30"
      
    - name: "PAYMENT_METHOD"
      type: "char(2)"
      description: "Preferred payment method"
      values:
        - "01": "Bank Transfer (轉帳)"
        - "02": "Cash (現金)"
        - "03": "Check (支票)"
        - "04": "Credit Card (信用卡)"
        - "05": "Post-dated Check (期票)"
      
    - name: "CURRENT_BALANCE"
      type: "decimal(12,2)"
      description: "Current AR balance"
      calculated: true
      
    - name: "OVERDUE_BALANCE"
      type: "decimal(12,2)"
      description: "Overdue amount"
      calculated: true
      
    - name: "AVAILABLE_CREDIT"
      type: "decimal(12,2)"
      description: "Available credit"
      calculated: "CREDIT_LIMIT - CURRENT_BALANCE"
      
    - name: "LAST_PAYMENT_DATE"
      type: "date"
      description: "Last payment received"
      
    - name: "LAST_PAYMENT_AMOUNT"
      type: "decimal(12,2)"
      description: "Last payment amount"
      
    - name: "YTD_SALES"
      type: "decimal(14,2)"
      description: "Year-to-date sales"
      calculated: true
      
    - name: "YTD_PAYMENTS"
      type: "decimal(14,2)"
      description: "Year-to-date payments"
      calculated: true
      
    - name: "COLLECTION_STATUS"
      type: "char(1)"
      description: "Collection flag"
      values:
        - "N": "Normal"
        - "W": "Watch"
        - "C": "Collection"
        - "L": "Legal"
      
    - name: "CREDIT_HOLD"
      type: "char(1)"
      description: "Credit hold flag"
      values: ["Y", "N"]
      default: "N"
      
    - name: "CREDIT_HOLD_DATE"
      type: "datetime"
      description: "When credit hold applied"
      
    - name: "CREDIT_HOLD_BY"
      type: "varchar(20)"
      description: "Who applied credit hold"
      
    - name: "BANK_ACCOUNT"
      type: "varchar(20)"
      description: "Customer bank account"
      
    - name: "BANK_NAME"
      type: "varchar(50)"
      description: "Customer bank name"
      
    - name: "STATEMENT_CYCLE"
      type: "char(2)"
      description: "Statement generation cycle"
      values:
        - "01": "Monthly"
        - "02": "Bi-weekly"
        - "03": "Weekly"
        - "04": "On Demand"
      default: "01"
      
    - name: "STATEMENT_EMAIL"
      type: "varchar(100)"
      description: "Email for statements"
      
    - name: "NOTES"
      type: "text"
      description: "Account notes"
      
    - name: "CREATED_BY"
      type: "varchar(20)"
      description: "Created by user"
      required: true
      
    - name: "CREATED_DATE"
      type: "datetime"
      description: "Creation timestamp"
      required: true
      default: "CURRENT_TIMESTAMP"
      
    - name: "MODIFIED_BY"
      type: "varchar(20)"
      description: "Last modified by"
      
    - name: "MODIFIED_DATE"
      type: "datetime"
      description: "Last modified timestamp"

  indexes:
    - name: "IDX_CUSTOMER"
      columns: ["CUSTOMER_ID"]
    - name: "IDX_STATUS"
      columns: ["ACCOUNT_STATUS", "COLLECTION_STATUS"]
    - name: "IDX_BALANCE"
      columns: ["CURRENT_BALANCE", "OVERDUE_BALANCE"]
```

### 2. Payment (付款記錄)
```yaml
Payment:
  table_name: "PAYMENT"
  chinese_name: "付款記錄"
  description: "Customer payment transactions"
  
  fields:
    - name: "PAYMENT_ID"
      type: "varchar(20)"
      description: "Unique payment ID"
      primary_key: true
      auto_generate: "PAY{YYYYMMDD}{SEQ:5}"
      
    - name: "PAYMENT_DATE"
      type: "date"
      description: "Payment received date"
      required: true
      
    - name: "CUSTOMER_ID"
      type: "varchar(20)"
      description: "Paying customer"
      foreign_key: "CUSTOMER.CUSTOMER_ID"
      required: true
      
    - name: "PAYMENT_TYPE"
      type: "char(2)"
      description: "Payment type"
      values:
        - "01": "Bank Transfer"
        - "02": "Cash"
        - "03": "Check"
        - "04": "Credit Card"
        - "05": "Post-dated Check"
        - "06": "Offset"
        - "07": "Other"
      required: true
      
    - name: "PAYMENT_AMOUNT"
      type: "decimal(12,2)"
      description: "Total payment amount"
      required: true
      validation: "> 0"
      
    - name: "ALLOCATED_AMOUNT"
      type: "decimal(12,2)"
      description: "Amount allocated to invoices"
      default: 0
      
    - name: "UNALLOCATED_AMOUNT"
      type: "decimal(12,2)"
      description: "Remaining unallocated"
      calculated: "PAYMENT_AMOUNT - ALLOCATED_AMOUNT"
      
    - name: "REFERENCE_NO"
      type: "varchar(50)"
      description: "Check/transfer reference"
      
    - name: "BANK_CODE"
      type: "varchar(10)"
      description: "Bank code"
      
    - name: "BANK_ACCOUNT"
      type: "varchar(20)"
      description: "Bank account number"
      
    - name: "CHECK_DATE"
      type: "date"
      description: "Check date (for post-dated)"
      
    - name: "CHECK_STATUS"
      type: "char(1)"
      description: "Check status"
      values:
        - "P": "Pending"
        - "C": "Cleared"
        - "R": "Returned"
        - "V": "Void"
      
    - name: "DEPOSIT_DATE"
      type: "date"
      description: "Bank deposit date"
      
    - name: "DEPOSIT_SLIP"
      type: "varchar(20)"
      description: "Deposit slip number"
      
    - name: "GL_POSTED"
      type: "char(1)"
      description: "Posted to GL flag"
      values: ["Y", "N"]
      default: "N"
      
    - name: "GL_DATE"
      type: "date"
      description: "GL posting date"
      
    - name: "RECEIPT_NO"
      type: "varchar(20)"
      description: "Receipt number issued"
      
    - name: "VOID_FLAG"
      type: "char(1)"
      description: "Void indicator"
      values: ["Y", "N"]
      default: "N"
      
    - name: "VOID_DATE"
      type: "datetime"
      description: "Void timestamp"
      
    - name: "VOID_REASON"
      type: "varchar(100)"
      description: "Reason for void"
      
    - name: "NOTES"
      type: "text"
      description: "Payment notes"
      
    - name: "CREATED_BY"
      type: "varchar(20)"
      description: "Created by user"
      required: true
      
    - name: "CREATED_DATE"
      type: "datetime"
      description: "Creation timestamp"
      required: true

  indexes:
    - name: "IDX_CUSTOMER_DATE"
      columns: ["CUSTOMER_ID", "PAYMENT_DATE"]
    - name: "IDX_REFERENCE"
      columns: ["REFERENCE_NO"]
    - name: "IDX_UNALLOCATED"
      columns: ["UNALLOCATED_AMOUNT"]
      condition: "UNALLOCATED_AMOUNT > 0"
```

### 3. PaymentAllocation (付款分配)
```yaml
PaymentAllocation:
  table_name: "PAYMENT_ALLOCATION"
  chinese_name: "付款分配明細"
  description: "Payment to invoice allocation details"
  
  fields:
    - name: "ALLOCATION_ID"
      type: "int"
      description: "Unique allocation ID"
      primary_key: true
      auto_increment: true
      
    - name: "PAYMENT_ID"
      type: "varchar(20)"
      description: "Source payment"
      foreign_key: "PAYMENT.PAYMENT_ID"
      required: true
      
    - name: "INVOICE_NO"
      type: "varchar(10)"
      description: "Target invoice"
      foreign_key: "INVOICE.INVOICE_NO"
      required: true
      
    - name: "ALLOCATION_DATE"
      type: "datetime"
      description: "When allocated"
      required: true
      default: "CURRENT_TIMESTAMP"
      
    - name: "ALLOCATED_AMOUNT"
      type: "decimal(12,2)"
      description: "Amount allocated"
      required: true
      validation: "> 0"
      
    - name: "DISCOUNT_TAKEN"
      type: "decimal(10,2)"
      description: "Early payment discount"
      default: 0
      
    - name: "WRITE_OFF_AMOUNT"
      type: "decimal(10,2)"
      description: "Small balance write-off"
      default: 0
      
    - name: "ALLOCATION_TYPE"
      type: "char(1)"
      description: "Allocation method"
      values:
        - "A": "Automatic"
        - "M": "Manual"
        - "S": "System"
      default: "M"
      
    - name: "REVERSED"
      type: "char(1)"
      description: "Reversal flag"
      values: ["Y", "N"]
      default: "N"
      
    - name: "REVERSAL_DATE"
      type: "datetime"
      description: "When reversed"
      
    - name: "REVERSAL_REASON"
      type: "varchar(100)"
      description: "Reason for reversal"
      
    - name: "CREATED_BY"
      type: "varchar(20)"
      description: "Created by user"
      required: true

  indexes:
    - name: "IDX_PAYMENT"
      columns: ["PAYMENT_ID"]
    - name: "IDX_INVOICE"
      columns: ["INVOICE_NO"]
    - name: "IDX_DATE"
      columns: ["ALLOCATION_DATE"]
```

### 4. CreditLimit (信用額度)
```yaml
CreditLimit:
  table_name: "CREDIT_LIMIT"
  chinese_name: "信用額度管理"
  description: "Customer credit limit history and approvals"
  
  fields:
    - name: "CREDIT_ID"
      type: "int"
      description: "Unique credit record ID"
      primary_key: true
      auto_increment: true
      
    - name: "CUSTOMER_ID"
      type: "varchar(20)"
      description: "Customer ID"
      foreign_key: "CUSTOMER.CUSTOMER_ID"
      required: true
      
    - name: "EFFECTIVE_DATE"
      type: "date"
      description: "Effective from date"
      required: true
      
    - name: "EXPIRY_DATE"
      type: "date"
      description: "Expiry date"
      
    - name: "CREDIT_LIMIT"
      type: "decimal(12,2)"
      description: "Approved limit"
      required: true
      validation: ">= 0"
      
    - name: "TEMPORARY_LIMIT"
      type: "decimal(12,2)"
      description: "Temporary increase"
      default: 0
      
    - name: "CREDIT_TERMS"
      type: "varchar(10)"
      description: "Payment terms"
      required: true
      
    - name: "RISK_CATEGORY"
      type: "char(1)"
      description: "Risk classification"
      values:
        - "A": "Low Risk"
        - "B": "Medium Risk"
        - "C": "High Risk"
        - "D": "Very High Risk"
      
    - name: "REVIEW_DATE"
      type: "date"
      description: "Next review date"
      
    - name: "APPROVAL_STATUS"
      type: "char(2)"
      description: "Approval status"
      values:
        - "01": "Pending"
        - "02": "Approved"
        - "03": "Rejected"
        - "04": "Expired"
      
    - name: "APPROVED_BY"
      type: "varchar(20)"
      description: "Approver ID"
      
    - name: "APPROVED_DATE"
      type: "datetime"
      description: "Approval timestamp"
      
    - name: "JUSTIFICATION"
      type: "text"
      description: "Limit justification"
      
    - name: "SUPPORTING_DOCS"
      type: "varchar(255)"
      description: "Document references"
      
    - name: "ACTIVE"
      type: "char(1)"
      description: "Active flag"
      values: ["Y", "N"]
      default: "Y"
      
    - name: "CREATED_BY"
      type: "varchar(20)"
      description: "Created by user"
      required: true
      
    - name: "CREATED_DATE"
      type: "datetime"
      description: "Creation timestamp"
      required: true

  indexes:
    - name: "IDX_CUSTOMER_DATE"
      columns: ["CUSTOMER_ID", "EFFECTIVE_DATE"]
    - name: "IDX_ACTIVE"
      columns: ["ACTIVE", "CUSTOMER_ID"]
```

### 5. AgingBucket (帳齡分析)
```yaml
AgingBucket:
  table_name: "AGING_BUCKET"
  chinese_name: "帳齡分析明細"
  description: "AR aging analysis snapshot"
  
  fields:
    - name: "AGING_ID"
      type: "int"
      description: "Unique aging record ID"
      primary_key: true
      auto_increment: true
      
    - name: "SNAPSHOT_DATE"
      type: "date"
      description: "Aging calculation date"
      required: true
      
    - name: "CUSTOMER_ID"
      type: "varchar(20)"
      description: "Customer ID"
      foreign_key: "CUSTOMER.CUSTOMER_ID"
      required: true
      
    - name: "INVOICE_NO"
      type: "varchar(10)"
      description: "Invoice number"
      foreign_key: "INVOICE.INVOICE_NO"
      required: true
      
    - name: "INVOICE_DATE"
      type: "date"
      description: "Invoice date"
      required: true
      
    - name: "DUE_DATE"
      type: "date"
      description: "Payment due date"
      required: true
      
    - name: "DAYS_OUTSTANDING"
      type: "int"
      description: "Days since invoice date"
      calculated: "SNAPSHOT_DATE - INVOICE_DATE"
      
    - name: "DAYS_OVERDUE"
      type: "int"
      description: "Days past due"
      calculated: "SNAPSHOT_DATE - DUE_DATE"
      
    - name: "ORIGINAL_AMOUNT"
      type: "decimal(12,2)"
      description: "Original invoice amount"
      required: true
      
    - name: "OUTSTANDING_AMOUNT"
      type: "decimal(12,2)"
      description: "Current balance"
      required: true
      
    - name: "BUCKET_CURRENT"
      type: "decimal(12,2)"
      description: "Current (not due)"
      default: 0
      
    - name: "BUCKET_1_30"
      type: "decimal(12,2)"
      description: "1-30 days overdue"
      default: 0
      
    - name: "BUCKET_31_60"
      type: "decimal(12,2)"
      description: "31-60 days overdue"
      default: 0
      
    - name: "BUCKET_61_90"
      type: "decimal(12,2)"
      description: "61-90 days overdue"
      default: 0
      
    - name: "BUCKET_OVER_90"
      type: "decimal(12,2)"
      description: "Over 90 days overdue"
      default: 0
      
    - name: "COLLECTION_STATUS"
      type: "char(1)"
      description: "Collection status"
      values:
        - "N": "Normal"
        - "R": "Reminder Sent"
        - "C": "In Collection"
        - "L": "Legal Action"
      
    - name: "DISPUTE_FLAG"
      type: "char(1)"
      description: "Dispute indicator"
      values: ["Y", "N"]
      default: "N"
      
    - name: "LAST_PAYMENT_DATE"
      type: "date"
      description: "Last payment on invoice"
      
    - name: "PROMISE_DATE"
      type: "date"
      description: "Promise to pay date"

  indexes:
    - name: "IDX_SNAPSHOT"
      columns: ["SNAPSHOT_DATE", "CUSTOMER_ID"]
    - name: "IDX_OVERDUE"
      columns: ["DAYS_OVERDUE", "OUTSTANDING_AMOUNT"]
    - name: "IDX_INVOICE"
      columns: ["INVOICE_NO"]
```

### 6. Collection (催收記錄)
```yaml
Collection:
  table_name: "COLLECTION"
  chinese_name: "催收活動記錄"
  description: "Collection activities and follow-up"
  
  fields:
    - name: "COLLECTION_ID"
      type: "int"
      description: "Unique collection ID"
      primary_key: true
      auto_increment: true
      
    - name: "CUSTOMER_ID"
      type: "varchar(20)"
      description: "Customer ID"
      foreign_key: "CUSTOMER.CUSTOMER_ID"
      required: true
      
    - name: "ACTIVITY_DATE"
      type: "datetime"
      description: "Activity timestamp"
      required: true
      default: "CURRENT_TIMESTAMP"
      
    - name: "ACTIVITY_TYPE"
      type: "char(2)"
      description: "Collection activity type"
      values:
        - "01": "Phone Call"
        - "02": "Email"
        - "03": "Letter"
        - "04": "SMS"
        - "05": "Visit"
        - "06": "Legal Notice"
        - "07": "Payment Promise"
        - "08": "Dispute Logged"
      required: true
      
    - name: "CONTACT_PERSON"
      type: "varchar(50)"
      description: "Person contacted"
      
    - name: "CONTACT_PHONE"
      type: "varchar(20)"
      description: "Contact phone"
      
    - name: "OUTSTANDING_AMOUNT"
      type: "decimal(12,2)"
      description: "Amount outstanding"
      required: true
      
    - name: "OVERDUE_DAYS"
      type: "int"
      description: "Days overdue"
      
    - name: "PROMISE_AMOUNT"
      type: "decimal(12,2)"
      description: "Promised payment amount"
      
    - name: "PROMISE_DATE"
      type: "date"
      description: "Promised payment date"
      
    - name: "RESULT_CODE"
      type: "char(2)"
      description: "Activity result"
      values:
        - "01": "Promised to Pay"
        - "02": "Will Call Back"
        - "03": "Dispute Raised"
        - "04": "No Answer"
        - "05": "Wrong Number"
        - "06": "Refused to Pay"
        - "07": "Partial Payment"
        - "08": "Full Payment"
      
    - name: "NOTES"
      type: "text"
      description: "Detailed notes"
      required: true
      
    - name: "FOLLOW_UP_DATE"
      type: "date"
      description: "Next follow-up date"
      
    - name: "FOLLOW_UP_ACTION"
      type: "varchar(100)"
      description: "Next action planned"
      
    - name: "COLLECTOR_ID"
      type: "varchar(20)"
      description: "Collection agent"
      required: true
      
    - name: "SUPERVISOR_ID"
      type: "varchar(20)"
      description: "Supervisor for escalation"
      
    - name: "CLOSED_FLAG"
      type: "char(1)"
      description: "Case closed"
      values: ["Y", "N"]
      default: "N"
      
    - name: "CLOSED_DATE"
      type: "date"
      description: "Case closed date"
      
    - name: "CLOSED_REASON"
      type: "varchar(100)"
      description: "Reason for closing"

  indexes:
    - name: "IDX_CUSTOMER_DATE"
      columns: ["CUSTOMER_ID", "ACTIVITY_DATE"]
    - name: "IDX_COLLECTOR"
      columns: ["COLLECTOR_ID", "ACTIVITY_DATE"]
    - name: "IDX_FOLLOW_UP"
      columns: ["FOLLOW_UP_DATE", "CLOSED_FLAG"]
```

### 7. AccountStatement (對帳單)
```yaml
AccountStatement:
  table_name: "ACCOUNT_STATEMENT"
  chinese_name: "客戶對帳單"
  description: "Customer statement generation history"
  
  fields:
    - name: "STATEMENT_ID"
      type: "varchar(20)"
      description: "Unique statement ID"
      primary_key: true
      auto_generate: "STM{YYYYMM}{SEQ:4}"
      
    - name: "CUSTOMER_ID"
      type: "varchar(20)"
      description: "Customer ID"
      foreign_key: "CUSTOMER.CUSTOMER_ID"
      required: true
      
    - name: "STATEMENT_DATE"
      type: "date"
      description: "Statement date"
      required: true
      
    - name: "PERIOD_FROM"
      type: "date"
      description: "Period start date"
      required: true
      
    - name: "PERIOD_TO"
      type: "date"
      description: "Period end date"
      required: true
      
    - name: "OPENING_BALANCE"
      type: "decimal(12,2)"
      description: "Opening AR balance"
      required: true
      
    - name: "TOTAL_INVOICES"
      type: "decimal(12,2)"
      description: "Total new invoices"
      default: 0
      
    - name: "TOTAL_CREDITS"
      type: "decimal(12,2)"
      description: "Total credit notes"
      default: 0
      
    - name: "TOTAL_PAYMENTS"
      type: "decimal(12,2)"
      description: "Total payments received"
      default: 0
      
    - name: "CLOSING_BALANCE"
      type: "decimal(12,2)"
      description: "Closing AR balance"
      required: true
      
    - name: "CURRENT_DUE"
      type: "decimal(12,2)"
      description: "Current amount due"
      default: 0
      
    - name: "OVERDUE_AMOUNT"
      type: "decimal(12,2)"
      description: "Total overdue"
      default: 0
      
    - name: "STATEMENT_TYPE"
      type: "char(1)"
      description: "Statement type"
      values:
        - "M": "Monthly"
        - "I": "Interim"
        - "F": "Final"
        - "R": "Reminder"
      default: "M"
      
    - name: "DELIVERY_METHOD"
      type: "char(1)"
      description: "Delivery method"
      values:
        - "E": "Email"
        - "P": "Print"
        - "B": "Both"
        - "N": "None"
      
    - name: "EMAIL_SENT"
      type: "char(1)"
      description: "Email sent flag"
      values: ["Y", "N"]
      default: "N"
      
    - name: "EMAIL_DATE"
      type: "datetime"
      description: "Email sent timestamp"
      
    - name: "PRINT_DATE"
      type: "datetime"
      description: "Print timestamp"
      
    - name: "FILE_PATH"
      type: "varchar(255)"
      description: "Statement file location"
      
    - name: "CREATED_BY"
      type: "varchar(20)"
      description: "Created by user"
      required: true
      
    - name: "CREATED_DATE"
      type: "datetime"
      description: "Creation timestamp"
      required: true

  indexes:
    - name: "IDX_CUSTOMER_DATE"
      columns: ["CUSTOMER_ID", "STATEMENT_DATE"]
    - name: "IDX_PERIOD"
      columns: ["PERIOD_FROM", "PERIOD_TO"]
```

## Relationships

```yaml
relationships:
  - name: "CustomerAccount_Customer"
    from: "CustomerAccount.CUSTOMER_ID"
    to: "Customer.CUSTOMER_ID"
    type: "one-to-one"
    
  - name: "Payment_Customer"
    from: "Payment.CUSTOMER_ID"
    to: "Customer.CUSTOMER_ID"
    type: "many-to-one"
    
  - name: "PaymentAllocation_Payment"
    from: "PaymentAllocation.PAYMENT_ID"
    to: "Payment.PAYMENT_ID"
    type: "many-to-one"
    
  - name: "PaymentAllocation_Invoice"
    from: "PaymentAllocation.INVOICE_NO"
    to: "Invoice.INVOICE_NO"
    type: "many-to-one"
    
  - name: "CreditLimit_Customer"
    from: "CreditLimit.CUSTOMER_ID"
    to: "Customer.CUSTOMER_ID"
    type: "many-to-one"
    
  - name: "AgingBucket_Customer"
    from: "AgingBucket.CUSTOMER_ID"
    to: "Customer.CUSTOMER_ID"
    type: "many-to-one"
    
  - name: "AgingBucket_Invoice"
    from: "AgingBucket.INVOICE_NO"
    to: "Invoice.INVOICE_NO"
    type: "many-to-one"
    
  - name: "Collection_Customer"
    from: "Collection.CUSTOMER_ID"
    to: "Customer.CUSTOMER_ID"
    type: "many-to-one"
    
  - name: "AccountStatement_Customer"
    from: "AccountStatement.CUSTOMER_ID"
    to: "Customer.CUSTOMER_ID"
    type: "many-to-one"
```

## Data Integrity Rules

```yaml
integrity_rules:
  - rule: "Payment amount must be positive"
    check: "PAYMENT.PAYMENT_AMOUNT > 0"
    
  - rule: "Allocated cannot exceed payment"
    check: "PAYMENT.ALLOCATED_AMOUNT <= PAYMENT.PAYMENT_AMOUNT"
    
  - rule: "Credit limit must be non-negative"
    check: "CREDIT_LIMIT.CREDIT_LIMIT >= 0"
    
  - rule: "Aging buckets must sum to outstanding"
    check: "BUCKET_CURRENT + BUCKET_1_30 + BUCKET_31_60 + BUCKET_61_90 + BUCKET_OVER_90 = OUTSTANDING_AMOUNT"
    
  - rule: "Statement balance must reconcile"
    check: "OPENING_BALANCE + TOTAL_INVOICES - TOTAL_CREDITS - TOTAL_PAYMENTS = CLOSING_BALANCE"
```