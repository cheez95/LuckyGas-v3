apiVersion: apps/v1
kind: Deployment
metadata:
  name: luckygas-celery-worker
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-celery-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: luckygas-system
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: luckygas-celery-worker
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: luckygas-celery-worker
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: luckygas-system
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: luckygas-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-worker
        image: gcr.io/luckygas-production/luckygas-backend:latest
        command: ["celery"]
        args:
        - "-A"
        - "app.tasks"
        - "worker"
        - "--loglevel=info"
        - "--concurrency=2"
        env:
        - name: CELERY_BROKER_URL
          value: "redis://$(REDIS_PASSWORD)@luckygas-redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://$(REDIS_PASSWORD)@luckygas-redis:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: luckygas-backend-secrets
              key: REDIS_PASSWORD
        envFrom:
        - configMapRef:
            name: luckygas-backend-config
        - secretRef:
            name: luckygas-backend-secrets
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - celery -A app.tasks inspect ping
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: gcp-credentials
          mountPath: /var/secrets/google
          readOnly: true
        - name: temp-storage
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: gcp-credentials
        secret:
          secretName: luckygas-backend-secrets
          items:
          - key: GOOGLE_APPLICATION_CREDENTIALS_JSON
            path: application_default_credentials.json
      - name: temp-storage
        emptyDir: {}
      terminationGracePeriodSeconds: 120
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: luckygas-celery-beat
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-celery-beat
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/part-of: luckygas-system
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: luckygas-celery-beat
      app.kubernetes.io/component: scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: luckygas-celery-beat
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/part-of: luckygas-system
        app.kubernetes.io/version: "1.0.0"
    spec:
      serviceAccountName: luckygas-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-beat
        image: gcr.io/luckygas-production/luckygas-backend:latest
        command: ["celery"]
        args:
        - "-A"
        - "app.tasks"
        - "beat"
        - "--loglevel=info"
        env:
        - name: CELERY_BROKER_URL
          value: "redis://$(REDIS_PASSWORD)@luckygas-redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://$(REDIS_PASSWORD)@luckygas-redis:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: luckygas-backend-secrets
              key: REDIS_PASSWORD
        envFrom:
        - configMapRef:
            name: luckygas-backend-config
        - secretRef:
            name: luckygas-backend-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /var/secrets/google
          readOnly: true
        - name: temp-storage
          mountPath: /tmp
        - name: celerybeat-schedule
          mountPath: /app/celerybeat-schedule
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: gcp-credentials
        secret:
          secretName: luckygas-backend-secrets
          items:
          - key: GOOGLE_APPLICATION_CREDENTIALS_JSON
            path: application_default_credentials.json
      - name: temp-storage
        emptyDir: {}
      - name: celerybeat-schedule
        emptyDir: {}
      terminationGracePeriodSeconds: 30