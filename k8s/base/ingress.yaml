apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: luckygas-ingress
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-ingress
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: luckygas-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://luckygas.com.tw"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/limit-connections: "20"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self' https://luckygas.com.tw https://*.googleapis.com https://*.gstatic.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.googleapis.com https://*.gstatic.com; style-src 'self' 'unsafe-inline' https://*.googleapis.com; img-src 'self' data: https://*.googleapis.com https://*.gstatic.com https://*.google.com https://*.googleusercontent.com; font-src 'self' https://*.gstatic.com; connect-src 'self' https://luckygas.com.tw wss://luckygas.com.tw https://*.googleapis.com;";
spec:
  tls:
  - hosts:
    - luckygas.com.tw
    - www.luckygas.com.tw
    - api.luckygas.com.tw
    secretName: luckygas-tls
  rules:
  - host: luckygas.com.tw
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: luckygas-backend
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: luckygas-frontend
            port:
              number: 80
  - host: www.luckygas.com.tw
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: luckygas-frontend
            port:
              number: 80
  - host: api.luckygas.com.tw
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: luckygas-backend
            port:
              number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: luckygas-backend
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: luckygas-system
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "luckygas-backend-config"}'
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: luckygas-backend
    app.kubernetes.io/component: backend
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
apiVersion: v1
kind: Service
metadata:
  name: luckygas-frontend
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: luckygas-system
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: luckygas-frontend
    app.kubernetes.io/component: frontend