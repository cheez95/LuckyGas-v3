apiVersion: apps/v1
kind: Deployment
metadata:
  name: luckygas-redis
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: luckygas-system
    app.kubernetes.io/version: "7.2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: luckygas-redis
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: luckygas-redis
        app.kubernetes.io/component: cache
        app.kubernetes.io/part-of: luckygas-system
        app.kubernetes.io/version: "7.2"
    spec:
      serviceAccountName: luckygas-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7.2-alpine
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --maxmemory
        - 512mb
        - --maxmemory-policy
        - allkeys-lru
        - --save
        - ""
        - --appendonly
        - "no"
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: luckygas-backend-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli -a $REDIS_PASSWORD ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli -a $REDIS_PASSWORD ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: redis-data
          mountPath: /data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 999
          capabilities:
            drop:
            - ALL
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: luckygas-redis
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: luckygas-system
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: redis
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: luckygas-redis
    app.kubernetes.io/component: cache