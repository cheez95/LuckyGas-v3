apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-sql-proxy
  namespace: luckygas
  labels:
    app.kubernetes.io/name: cloud-sql-proxy
    app.kubernetes.io/component: database-proxy
    app.kubernetes.io/part-of: luckygas-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloud-sql-proxy
      app.kubernetes.io/component: database-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloud-sql-proxy
        app.kubernetes.io/component: database-proxy
        app.kubernetes.io/part-of: luckygas-system
    spec:
      serviceAccountName: luckygas-backend
      containers:
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.0
        args:
        - "--structured-logs"
        - "--port=5432"
        - "--health-check"
        - "--max-sigterm-delay=30s"
        - "--prometheus"
        - "--prometheus-port=9090"
        - "$(INSTANCE_CONNECTION_NAME)"
        env:
        - name: INSTANCE_CONNECTION_NAME
          valueFrom:
            configMapKeyRef:
              name: luckygas-backend-config
              key: CLOUD_SQL_CONNECTION_NAME
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/application_default_credentials.json"
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        - containerPort: 9091
          name: health
          protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /liveness
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readiness
            port: health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: health
          initialDelaySeconds: 0
          periodSeconds: 1
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 20
        volumeMounts:
        - name: gcp-credentials
          mountPath: /var/secrets/google
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
      volumes:
      - name: gcp-credentials
        secret:
          secretName: luckygas-backend-secrets
          items:
          - key: GOOGLE_APPLICATION_CREDENTIALS_JSON
            path: application_default_credentials.json
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-sql-proxy
  namespace: luckygas
  labels:
    app.kubernetes.io/name: cloud-sql-proxy
    app.kubernetes.io/component: database-proxy
    app.kubernetes.io/part-of: luckygas-system
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgres
    protocol: TCP
    name: postgres
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: cloud-sql-proxy
    app.kubernetes.io/component: database-proxy