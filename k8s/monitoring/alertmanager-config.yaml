apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'
      slack_api_url: '${SLACK_WEBHOOK}'
    
    # Templates
    templates:
      - '/etc/alertmanager/templates/*.tmpl'
    
    # Route tree
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 12h
      receiver: 'default'
      
      routes:
        # Critical alerts go to PagerDuty
        - match:
            severity: critical
          receiver: pagerduty-critical
          continue: true
          
        # Analytics endpoint alerts
        - match_re:
            alertname: Analytics.*
          receiver: analytics-team
          
        # Database alerts
        - match:
            team: database
          receiver: database-team
          
        # Business alerts
        - match:
            team: business
          receiver: business-team
          group_wait: 5m
          group_interval: 5m
          
        # Default route for warnings
        - match:
            severity: warning
          receiver: slack-warnings
    
    # Receivers
    receivers:
      - name: 'default'
        slack_configs:
          - channel: '#alerts'
            title: 'LuckyGas Alert'
            text: '{{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}'
            send_resolved: true
            
      - name: 'pagerduty-critical'
        pagerduty_configs:
          - service_key: '${PAGERDUTY_SERVICE_KEY}'
            description: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'
            details:
              firing: '{{ .Alerts.Firing | len }}'
              resolved: '{{ .Alerts.Resolved | len }}'
              alertname: '{{ .GroupLabels.alertname }}'
              cluster: 'luckygas-prod'
              region: 'asia-east1'
            
      - name: 'analytics-team'
        slack_configs:
          - channel: '#analytics-alerts'
            title: 'Analytics System Alert'
            text: |
              *Alert:* {{ .GroupLabels.alertname }}
              *Summary:* {{ .CommonAnnotations.summary }}
              *Description:* {{ .CommonAnnotations.description }}
              *Severity:* {{ .CommonLabels.severity }}
            actions:
              - type: button
                text: 'View Dashboard'
                url: 'https://grafana.luckygas.com.tw/d/luckygas-analytics'
            send_resolved: true
            
      - name: 'database-team'
        slack_configs:
          - channel: '#database-alerts'
            title: 'Database Alert'
            color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
            fields:
              - title: Alert
                value: '{{ .GroupLabels.alertname }}'
                short: true
              - title: Instance
                value: '{{ .CommonLabels.instance }}'
                short: true
        pagerduty_configs:
          - service_key: '${PAGERDUTY_DATABASE_KEY}'
            severity: '{{ .CommonLabels.severity }}'
            
      - name: 'business-team'
        email_configs:
          - to: 'operations@luckygas.com.tw'
            from: 'alerts@luckygas.com.tw'
            smarthost: 'smtp.gmail.com:587'
            auth_username: 'alerts@luckygas.com.tw'
            auth_password: '${EMAIL_PASSWORD}'
            headers:
              Subject: 'LuckyGas Business Alert: {{ .GroupLabels.alertname }}'
        slack_configs:
          - channel: '#business-alerts'
            title: 'Business Operations Alert'
            text: '{{ .CommonAnnotations.summary }}'
            send_resolved: false
            
      - name: 'slack-warnings'
        slack_configs:
          - channel: '#warnings'
            title: 'Warning Alert'
            color: 'warning'
            text: |
              {{ range .Alerts }}
              *Alert:* {{ .Labels.alertname }}
              *Summary:* {{ .Annotations.summary }}
              {{ end }}
            send_resolved: true
    
    # Inhibition rules
    inhibit_rules:
      # Inhibit warnings when critical alert is firing
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'instance']
        
      # Inhibit analytics endpoint alerts during maintenance
      - source_match:
          alertname: 'MaintenanceMode'
        target_match_re:
          alertname: 'Analytics.*|Backend.*'

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-templates
  namespace: monitoring
data:
  luckygas.tmpl: |
    {{ define "luckygas.title" }}
    [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.alertname }} @ {{ .GroupLabels.cluster }}
    {{ end }}
    
    {{ define "luckygas.text" }}
    {{ range .Alerts }}
    *Alert:* {{ .Labels.alertname }}
    *Instance:* {{ .Labels.instance }}
    *Severity:* {{ .Labels.severity }}
    *Summary:* {{ .Annotations.summary }}
    *Description:* {{ .Annotations.description }}
    *Graph:* <https://grafana.luckygas.com.tw/explore?left=["now-1h","now","Prometheus",{"expr":"{{ .GeneratorURL }}"}]|Graph>
    *Details:*
    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
    {{ end }}
    {{ end }}
    {{ end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.26.0
          args:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/alertmanager'
            - '--web.external-url=https://alertmanager.luckygas.com.tw'
          ports:
            - containerPort: 9093
          env:
            - name: SLACK_WEBHOOK
              valueFrom:
                secretKeyRef:
                  name: alertmanager-secrets
                  key: slack-webhook
            - name: PAGERDUTY_SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: alertmanager-secrets
                  key: pagerduty-service-key
            - name: PAGERDUTY_DATABASE_KEY
              valueFrom:
                secretKeyRef:
                  name: alertmanager-secrets
                  key: pagerduty-database-key
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: alertmanager-secrets
                  key: email-password
          volumeMounts:
            - name: config
              mountPath: /etc/alertmanager
            - name: templates
              mountPath: /etc/alertmanager/templates
            - name: alertmanager-storage
              mountPath: /alertmanager
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      volumes:
        - name: config
          configMap:
            name: alertmanager-config
        - name: templates
          configMap:
            name: alertmanager-templates
        - name: alertmanager-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  selector:
    app: alertmanager
  ports:
    - port: 9093
      targetPort: 9093

---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-secrets
  namespace: monitoring
type: Opaque
stringData:
  slack-webhook: "${SLACK_WEBHOOK_URL}"
  pagerduty-service-key: "${PAGERDUTY_SERVICE_KEY}"
  pagerduty-database-key: "${PAGERDUTY_DATABASE_KEY}"
  email-password: "${EMAIL_APP_PASSWORD}"