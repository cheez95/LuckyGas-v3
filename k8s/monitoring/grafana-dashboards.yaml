apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
data:
  luckygas-overview.json: |
    {
      "dashboard": {
        "title": "LuckyGas Overview Dashboard",
        "uid": "luckygas-overview",
        "timezone": "Asia/Taipei",
        "panels": [
          {
            "title": "API Response Time (p95)",
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job=\"luckygas-backend\"}[5m])) by (le))",
                "legendFormat": "95th percentile"
              }
            ],
            "yaxes": [{"format": "s", "label": "Response Time"}],
            "alert": {
              "conditions": [
                {
                  "evaluator": {"params": [2], "type": "gt"},
                  "query": {"params": ["A", "5m", "now"]},
                  "reducer": {"params": [], "type": "avg"}
                }
              ],
              "name": "API Response Time > 2s"
            }
          },
          {
            "title": "Order Processing Rate",
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
            "type": "graph",
            "targets": [
              {
                "expr": "rate(business_orders_created_total[5m])",
                "legendFormat": "Orders/sec"
              }
            ]
          },
          {
            "title": "Active Users",
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 8},
            "type": "stat",
            "targets": [
              {
                "expr": "sum(increase(http_requests_total{job=\"luckygas-backend\",path=~\"/api/v1/.*\"}[5m])) by (user_type)"
              }
            ]
          },
          {
            "title": "Google Maps API Usage",
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 8},
            "type": "graph",
            "targets": [
              {
                "expr": "rate(google_maps_api_requests_total[5m])",
                "legendFormat": "{{api_method}}"
              }
            ]
          },
          {
            "title": "System Resources",
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"luckygas\"}[5m])) by (pod)",
                "legendFormat": "CPU: {{pod}}"
              },
              {
                "expr": "sum(container_memory_working_set_bytes{namespace=\"luckygas\"}) by (pod) / 1024 / 1024 / 1024",
                "legendFormat": "Memory: {{pod}}",
                "yaxis": 2
              }
            ]
          }
        ]
      }
    }
  luckygas-analytics.json: |
    {
      "dashboard": {
        "title": "LuckyGas Analytics Endpoints",
        "uid": "luckygas-analytics",
        "timezone": "Asia/Taipei",
        "panels": [
          {
            "title": "Analytics Endpoint Response Times",
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0},
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job=\"luckygas-backend\",path=~\"/api/v1/analytics/.*\"}[5m])) by (path, le))",
                "legendFormat": "{{path}}"
              }
            ]
          },
          {
            "title": "Analytics Endpoint Request Rate",
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8},
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{job=\"luckygas-backend\",path=\"/api/v1/analytics/executive\"}[5m]))",
                "legendFormat": "Executive"
              },
              {
                "expr": "sum(rate(http_requests_total{job=\"luckygas-backend\",path=\"/api/v1/analytics/operations\"}[5m]))",
                "legendFormat": "Operations"
              },
              {
                "expr": "sum(rate(http_requests_total{job=\"luckygas-backend\",path=\"/api/v1/analytics/financial\"}[5m]))",
                "legendFormat": "Financial"
              },
              {
                "expr": "sum(rate(http_requests_total{job=\"luckygas-backend\",path=\"/api/v1/analytics/performance\"}[5m]))",
                "legendFormat": "Performance"
              }
            ]
          },
          {
            "title": "Analytics Query Performance",
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
            "type": "table",
            "targets": [
              {
                "expr": "topk(10, histogram_quantile(0.95, sum(rate(database_query_duration_seconds_bucket{query_type=\"analytics\"}[5m])) by (query_name, le)))",
                "format": "table"
              }
            ]
          }
        ]
      }
    }
  luckygas-delivery.json: |
    {
      "dashboard": {
        "title": "LuckyGas Delivery Operations",
        "uid": "luckygas-delivery",
        "timezone": "Asia/Taipei",
        "panels": [
          {
            "title": "Active Deliveries",
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0},
            "type": "stat",
            "targets": [
              {
                "expr": "sum(delivery_status{status=\"in_progress\"})"
              }
            ]
          },
          {
            "title": "Today's Deliveries",
            "gridPos": {"h": 8, "w": 6, "x": 6, "y": 0},
            "type": "stat",
            "targets": [
              {
                "expr": "sum(increase(delivery_completed_total[24h]))"
              }
            ]
          },
          {
            "title": "On-Time Delivery Rate",
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 0},
            "type": "gauge",
            "targets": [
              {
                "expr": "sum(rate(delivery_on_time_total[24h])) / sum(rate(delivery_completed_total[24h])) * 100"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 80},
                    {"color": "green", "value": 95}
                  ]
                },
                "unit": "percent"
              }
            }
          },
          {
            "title": "Average Delivery Time",
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0},
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.5, sum(rate(delivery_duration_seconds_bucket[1h])) by (le))"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "m"
              }
            }
          },
          {
            "title": "Driver Locations",
            "gridPos": {"h": 16, "w": 12, "x": 0, "y": 8},
            "type": "geomap",
            "targets": [
              {
                "expr": "driver_location_latitude",
                "legendFormat": "{{driver_name}}"
              }
            ]
          },
          {
            "title": "Route Optimization Efficiency",
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
            "type": "graph",
            "targets": [
              {
                "expr": "avg(route_optimization_distance_saved_percentage)",
                "legendFormat": "Distance Saved %"
              },
              {
                "expr": "avg(route_optimization_time_saved_percentage)",
                "legendFormat": "Time Saved %"
              }
            ]
          }
        ]
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.0.0
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: password
            - name: GF_USERS_DEFAULT_THEME
              value: "light"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.luckygas.com.tw"
            - name: TZ
              value: "Asia/Taipei"
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
        - name: grafana-datasources
          configMap:
            name: grafana-datasources

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi