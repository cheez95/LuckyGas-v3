apiVersion: v1
kind: ServiceMonitor
metadata:
  name: luckygas-backend-monitor
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: luckygas-system
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: luckygas-backend
      app.kubernetes.io/component: backend
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scheme: http
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: luckygas-frontend-monitor
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas-frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: luckygas-system
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: luckygas-frontend
      app.kubernetes.io/component: frontend
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scheme: http
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: luckygas-alerts
  namespace: luckygas
  labels:
    app.kubernetes.io/name: luckygas
    app.kubernetes.io/part-of: luckygas-system
    prometheus: kube-prometheus
spec:
  groups:
  - name: luckygas.rules
    interval: 30s
    rules:
    # Backend alerts
    - alert: BackendHighErrorRate
      expr: |
        (
          sum(rate(http_requests_total{app_kubernetes_io_name="luckygas-backend",status=~"5.."}[5m]))
          /
          sum(rate(http_requests_total{app_kubernetes_io_name="luckygas-backend"}[5m]))
        ) > 0.05
      for: 5m
      labels:
        severity: critical
        team: backend
      annotations:
        summary: "High error rate on backend ({{ $value | humanizePercentage }})"
        description: "Backend error rate is above 5% for the last 5 minutes"
        
    - alert: BackendHighLatency
      expr: |
        histogram_quantile(0.95, 
          sum(rate(http_request_duration_seconds_bucket{app_kubernetes_io_name="luckygas-backend"}[5m])) 
          by (le)
        ) > 1.0
      for: 5m
      labels:
        severity: warning
        team: backend
      annotations:
        summary: "High latency on backend ({{ $value }}s)"
        description: "95th percentile latency is above 1 second for the last 5 minutes"
        
    - alert: BackendPodCrashLooping
      expr: |
        rate(kube_pod_container_status_restarts_total{
          namespace="luckygas",
          pod=~".*luckygas-backend.*"
        }[15m]) > 0
      for: 5m
      labels:
        severity: critical
        team: backend
      annotations:
        summary: "Backend pod {{ $labels.pod }} is crash looping"
        description: "Pod has restarted {{ $value }} times in the last 15 minutes"
        
    # Frontend alerts
    - alert: FrontendHighErrorRate
      expr: |
        (
          sum(rate(nginx_http_requests_total{app_kubernetes_io_name="luckygas-frontend",status=~"5.."}[5m]))
          /
          sum(rate(nginx_http_requests_total{app_kubernetes_io_name="luckygas-frontend"}[5m]))
        ) > 0.05
      for: 5m
      labels:
        severity: warning
        team: frontend
      annotations:
        summary: "High error rate on frontend ({{ $value | humanizePercentage }})"
        description: "Frontend error rate is above 5% for the last 5 minutes"
        
    # Database alerts
    - alert: DatabaseConnectionPoolExhausted
      expr: |
        (
          sum(postgresql_connections_active{app_kubernetes_io_name="luckygas-backend"})
          /
          sum(postgresql_connections_max{app_kubernetes_io_name="luckygas-backend"})
        ) > 0.9
      for: 5m
      labels:
        severity: critical
        team: backend
      annotations:
        summary: "Database connection pool nearly exhausted ({{ $value | humanizePercentage }})"
        description: "More than 90% of database connections are in use"
        
    # Resource alerts
    - alert: HighMemoryUsage
      expr: |
        (
          container_memory_working_set_bytes{namespace="luckygas", pod=~".*luckygas.*"}
          /
          container_spec_memory_limit_bytes{namespace="luckygas", pod=~".*luckygas.*"}
        ) > 0.9
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High memory usage in {{ $labels.pod }} ({{ $value | humanizePercentage }})"
        description: "Pod is using more than 90% of its memory limit"
        
    - alert: HighCPUUsage
      expr: |
        (
          rate(container_cpu_usage_seconds_total{namespace="luckygas", pod=~".*luckygas.*"}[5m])
          /
          container_spec_cpu_quota{namespace="luckygas", pod=~".*luckygas.*"} * 100000
        ) > 0.9
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High CPU usage in {{ $labels.pod }} ({{ $value | humanizePercentage }})"
        description: "Pod is using more than 90% of its CPU limit"